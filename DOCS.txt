# todo to think about logging globally
# todo separate in log re-connect events
# todo print list of registered events
# todo tweet call
# todo MSG_REDIRECT = 41 ??
# todo MSG_DBG_PRINT = 55 ??
# todo add debug response statuses parse operation
# todo lowercase for event names
# todo add status handling maybe for process RSp message
# todo add ssl support
# todo remove heartbeat printing and event printing

# todo const should be added according
# https://docs.micropython.org/en/latest/reference/constrained.html#execution-phase

# todo add invalid auth token STA_INVALID_TOKEN =(9)
# def _authenticate(self):
# todo eval certain repetitive expressions
# review constants



# todo MSG_EVENT_LOG = 64
#=============================================================================
# def connected(self):
"""
Returns true when hardware is connected to Blynk Server, false if there is no active connection to Blynk server.
@return: Boolean
"""
#=============================================================================
#def config(self, token, server=BLYNK_SERVER, port=BLYNK_HTTP_PORT, ssl=False):
#        """
#        Allows you to manage network connection.
#        @param token: auth token
#        @param server: blynk server
#        @param port: blynk port
#        @param ssl: use ssl flag
#        @return:
#        """
#======================================================================
#    def connect(self, timeout=CONNECT_CALL_TIMEOUT):
#        """
#        Function will continue trying to connect to Blynk server.
#        @param timeout: global function retry timeout. Default value = 30 seconds
#        @return: connection status
#        """
#===================================================================
#"""
#        Disconnects hardware from Blynk server
#        @param err_msg: error message to print. Optional parameter
#        @return: None
#        """
#================================================================
#"""
#        Write data to virtual pin
#        @param v_pin: pin number: Integer
#        @param val: values to write
#        @return: Returns the number of bytes sent
#        """
#===========================================================
#"""
#        Sync virtual pin/pins to get actual data.
#        @param v_pin: single pin or multiple pins number
#        @return: Returns the number of bytes sent
#        """
#=================================================================
#"""
#        Send email from hardware to any address.
#        @param to: destination email address
#        @param subject: email subject
#        @param body: email body
#        @return: Returns the number of bytes sent
#        """
#===================================================================
#"""
#        Send notification from hardware to App
#        @param msg: notification message
#        @return: Returns the number of bytes sent
#        """
#==========================================================
#"""
#        Set virtual pin property eg. "color", "label" etc
#        @param v_pin: pin number
#        @param property_name: name of target property
#        @param val: values that should be assigned for target property
#        @return: Returns the number of bytes sent
#        """
#=================================================================
#"""
#        This function should be called frequently to process incoming commands
#        and perform housekeeping of Blynk connection.
#        @return: None
#        """
#==================================================================