
# todo 'get socket' add specific exception
# todo _SOCK_CONNECTION_TIMEOUT = 0.05
# todo think about protocol messages compact

# todo clarify internal messages usage
# todo to think about logging globally
# todo remove heartbeat printing and event printing
# todo tweet call
# todo add debug response statuses parse operation
# todo add status handling maybe for process RSP message
# todo add ssl support

# todo eval certain repetitive expressions
# todo review error handling in user callbacks


# todo MSG_EVENT_LOG = 64
# todo MSG_REDIRECT = 41 ??
# todo MSG_DBG_PRINT = 55 ??
######################################################################################################
# https://docs.micropython.org/en/latest/reference/constrained.html#execution-phase

gpio readall
http://wiringpi.com/download-and-install/

https://github.com/adafruit/Adafruit_Python_DHT/blob/master/examples/simpletest.py

git clone https://github.com/micropython/micropython.git
cd micropython/
make
./mpy-cross --help
./mpy-cross <input_py_file>
*.mpy file will be created that can be imported in the same way as common py libs

to use heapsize
import gc
gc.collect()
gc.mem_free()

10843
6338

# todo do we need config call ?
#============================================================================
    def config(self, token, server=BLYNK_SERVER, port=BLYNK_HTTP_PORT, ssl=False):
        self.token = token
        self.server = server
        self.port = port
        self.ssl = ssl

#=============================================================================
# def connected(self):
"""
Returns true when hardware is connected to Blynk Server, false if there is no active connection to Blynk server.
@return: Boolean
"""
#=============================================================================
#def config(self, token, server=BLYNK_SERVER, port=BLYNK_HTTP_PORT, ssl=False):
#        """
#        Allows you to manage network connection.
#        @param token: auth token
#        @param server: blynk server
#        @param port: blynk port
#        @param ssl: use ssl flag
#        @return:
#        """
#======================================================================
#    def connect(self, timeout=CONNECT_CALL_TIMEOUT):
#        """
#        Function will continue trying to connect to Blynk server.
#        @param timeout: global function retry timeout. Default value = 30 seconds
#        @return: connection status
#        """
#===================================================================
#"""
#        Disconnects hardware from Blynk server
#        @param err_msg: error message to print. Optional parameter
#        @return: None
#        """
#================================================================
#"""
#        Write data to virtual pin
#        @param v_pin: pin number: Integer
#        @param val: values to write
#        @return: Returns the number of bytes sent
#        """
#===========================================================
#"""
#        Sync virtual pin/pins to get actual data.
#        @param v_pin: single pin or multiple pins number
#        @return: Returns the number of bytes sent
#        """
#=================================================================
#"""
#        Send email from hardware to any address.
#        @param to: destination email address
#        @param subject: email subject
#        @param body: email body
#        @return: Returns the number of bytes sent
#        """
#===================================================================
#"""
#        Send notification from hardware to App
#        @param msg: notification message
#        @return: Returns the number of bytes sent
#        """
#==========================================================
#"""
#        Set virtual pin property eg. "color", "label" etc
#        @param v_pin: pin number
#        @param property_name: name of target property
#        @param val: values that should be assigned for target property
#        @return: Returns the number of bytes sent
#        """
#=================================================================
#"""
#        This function should be called frequently to process incoming commands
#        and perform housekeeping of Blynk connection.
#        @return: None
#        """
#==================================================================